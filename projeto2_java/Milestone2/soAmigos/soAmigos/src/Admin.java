
import java.io.FileInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.util.Observable;
import java.util.StringTokenizer;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Admin.java
 *
 * Created on Jun 10, 2010, 9:06:58 PM
 */

/**
 *
 * @author andre
 */
public class Admin extends javax.swing.JFrame {
    

    public static SoAmigos loadSoAmigos(String f) {
    SoAmigos bd=null;
        try {
        ObjectInputStream oin = new ObjectInputStream(new FileInputStream(f));
        bd = (SoAmigos) oin.readObject();
        oin.close();
    }
    catch (IOException e) {System.out.println(e.getMessage());}
    catch (ClassNotFoundException e) {System.out.println(e.getMessage()); }
    return bd;
  }

    SoAmigos amigos;

    /** Creates new form Admin */
    public Admin(SoAmigos amigos) {
        this.amigos=amigos;
        initComponents();

        if ((this.amigos)!=null) {

            DefaultListModel model = new DefaultListModel();
            for (Perfil utili : this.amigos.treeNome.values())
                model.addElement(utili.getUtilizador().getNome() + " - " + utili.getUtilizador().getNif());
            ListPessoas.setModel(model);
        }
        else ListPessoas.setModel(new DefaultListModel());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        menuBar1 = new java.awt.MenuBar();
        menu1 = new java.awt.Menu();
        menu2 = new java.awt.Menu();
        menuBar2 = new java.awt.MenuBar();
        menu3 = new java.awt.Menu();
        menu4 = new java.awt.Menu();
        cbopc = new javax.swing.JComboBox();
        txtUser = new javax.swing.JTextField();
        txtmorada = new javax.swing.JTextField();
        txtnif = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        txtnome = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListPessoas = new javax.swing.JList();

        menu1.setLabel("File");
        menuBar1.add(menu1);

        menu2.setLabel("Edit");
        menuBar1.add(menu2);

        menu3.setLabel("File");
        menuBar2.add(menu3);

        menu4.setLabel("Edit");
        menuBar2.add(menu4);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Administrador");
        setMinimumSize(new java.awt.Dimension(650, 450));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        cbopc.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nome:", "Nif:" }));
        cbopc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbopcActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 20;
        getContentPane().add(cbopc, gridBagConstraints);

        txtUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUserKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 140;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        getContentPane().add(txtUser, gridBagConstraints);

        txtmorada.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        getContentPane().add(txtmorada, gridBagConstraints);

        txtnif.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        getContentPane().add(txtnif, gridBagConstraints);

        jLabel1.setText("Nome");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.ipady = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.insets = new java.awt.Insets(25, 0, 0, 0);
        getContentPane().add(jLabel1, gridBagConstraints);

        jLabel2.setText("Morada");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.ipady = 12;
        getContentPane().add(jLabel2, gridBagConstraints);

        jLabel3.setText("Nif");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.ipady = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        getContentPane().add(jLabel3, gridBagConstraints);

        jButton1.setText("Remover Utilizador");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        getContentPane().add(jButton1, gridBagConstraints);

        jButton2.setText("Sair");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        getContentPane().add(jButton2, gridBagConstraints);

        txtnome.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 137;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.insets = new java.awt.Insets(25, 0, 0, 0);
        getContentPane().add(txtnome, gridBagConstraints);

        ListPessoas.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "1" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        ListPessoas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ListPessoasMouseClicked(evt);
            }
        });
        ListPessoas.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ListPessoasValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(ListPessoas);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        getContentPane().add(jScrollPane1, gridBagConstraints);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-650)/2, (screenSize.height-450)/2, 650, 450);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void ListPessoasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListPessoasMouseClicked
        String pessoa = ListPessoas.getSelectedValue().toString();
        String user;

        if (cbopc.getSelectedItem().toString().equals("Nome:")){
            StringTokenizer corte = new StringTokenizer(pessoa,"-");
            user = corte.nextToken();
            user = user.substring(0, user.length()-1);
            txtnome.setText(amigos.getPerfilNome(user).getUtilizador().getNome());
            txtnif.setText(amigos.getPerfilNome(user).getUtilizador().getNif());
            txtmorada.setText(amigos.getPerfilNome(user).getUtilizador().getMorada());
        }

        if (cbopc.getSelectedItem().toString().equals("Nif:")){
            user = pessoa.substring(0, 10);
            txtnome.setText(amigos.getPerfil(user).getUtilizador().getNome());
            txtnif.setText(amigos.getPerfil(user).getUtilizador().getNif());
            txtmorada.setText(amigos.getPerfil(user).getUtilizador().getMorada());
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_ListPessoasMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         String nif = txtnif.getText();
         amigos.removerPerfilNif(nif);
         JOptionPane.showMessageDialog(null,"Utilizador removido com sucesso!");
         txtnome.setText("");
         txtnif.setText("");
         txtmorada.setText("");

         if (cbopc.getSelectedItem().equals("Nif:")) {
            if ((this.amigos)!=null) {

            DefaultListModel model = new DefaultListModel();
            for (Perfil utili : this.amigos.treeNif.values())
                model.addElement(utili.getUtilizador().getNif() + " - " + utili.getUtilizador().getNome());
            ListPessoas.setModel(model);
        }
        else ListPessoas.setModel(new DefaultListModel());
        }

        if (cbopc.getSelectedItem().equals("Nome:")) {
            if ((this.amigos)!=null) {

            DefaultListModel model = new DefaultListModel();
            for (Perfil utili : this.amigos.treeNome.values())
                model.addElement(utili.getUtilizador().getNome() + " - " + utili.getUtilizador().getNif());
            ListPessoas.setModel(model);
        }
        else ListPessoas.setModel(new DefaultListModel());
        }// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cbopcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbopcActionPerformed
         if (cbopc.getSelectedItem().equals("Nif:")) {
            if ((this.amigos)!=null) {

            DefaultListModel model = new DefaultListModel();
            for (Perfil utili : this.amigos.treeNif.values())
                model.addElement(utili.getUtilizador().getNif() + " - " + utili.getUtilizador().getNome());
            ListPessoas.setModel(model);
        }
        else ListPessoas.setModel(new DefaultListModel());
        }

        if (cbopc.getSelectedItem().equals("Nome:")) {
            if ((this.amigos)!=null) {

            DefaultListModel model = new DefaultListModel();
            for (Perfil utili : this.amigos.treeNome.values())
                model.addElement(utili.getUtilizador().getNome() + " - " + utili.getUtilizador().getNif());
            ListPessoas.setModel(model);
        }
        else ListPessoas.setModel(new DefaultListModel());
        }       // TODO add your handling code here:
    }//GEN-LAST:event_cbopcActionPerformed

    private void txtUserKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserKeyReleased
        Pattern pattern = Pattern.compile(txtUser.getText());
        DefaultListModel model = new DefaultListModel();

        if (cbopc.getSelectedItem().equals("Nome:")) {
            for (Perfil utili : this.amigos.treeNome.values()) {
                Matcher matcher = pattern.matcher(utili.getUtilizador().getNome());
                if (matcher.find()) model.addElement(utili.getUtilizador().getNome() + " - " + utili.getUtilizador().getNif());
            }
        }

        if (cbopc.getSelectedItem().equals("Nif:")) {
            for (Perfil utili : this.amigos.treeNif.values()) {
                Matcher matcher = pattern.matcher(utili.getUtilizador().getNif());
                if (matcher.find()) model.addElement(utili.getUtilizador().getNif() + " - " + utili.getUtilizador().getNome());
            }
        }

        ListPessoas.setModel(model);
    }//GEN-LAST:event_txtUserKeyReleased

    private void ListPessoasValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ListPessoasValueChanged
        String pessoa = ListPessoas.getSelectedValue().toString();
        String user;

        if (cbopc.getSelectedItem().toString().equals("Nome:")){
            StringTokenizer corte = new StringTokenizer(pessoa,"-");
            user = corte.nextToken();
            user = user.substring(0, user.length()-1);
            txtnome.setText(amigos.getPerfilNome(user).getUtilizador().getNome());
            txtnif.setText(amigos.getPerfilNome(user).getUtilizador().getNif());
            txtmorada.setText(amigos.getPerfilNome(user).getUtilizador().getMorada());
        }

        if (cbopc.getSelectedItem().toString().equals("Nif:")){
            user = pessoa.substring(0, 10);
            txtnome.setText(amigos.getPerfil(user).getUtilizador().getNome());
            txtnif.setText(amigos.getPerfil(user).getUtilizador().getNif());
            txtmorada.setText(amigos.getPerfil(user).getUtilizador().getMorada());
        }
    }//GEN-LAST:event_ListPessoasValueChanged

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        
    }//GEN-LAST:event_formWindowClosing

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin(new SoAmigos()).setVisible(true);
            }
        });

    }
    
    public void update(Observable observable, Object obj){
        
        if (cbopc.getSelectedItem().equals("Nif:")) {
            if ((this.amigos)!=null) {

            DefaultListModel model = new DefaultListModel();
            for (Perfil utili : this.amigos.treeNif.values())
                model.addElement(utili.getUtilizador().getNif() + " - " + utili.getUtilizador().getNome());
            ListPessoas.setModel(model);
        }
        else ListPessoas.setModel(new DefaultListModel());
        }
    
        if (cbopc.getSelectedItem().equals("Nome:")) {
            if ((this.amigos)!=null) {

            DefaultListModel model = new DefaultListModel();
            for (Perfil utili : this.amigos.treeNome.values())
                model.addElement(utili.getUtilizador().getNome() + " - " + utili.getUtilizador().getNif());
            ListPessoas.setModel(model);
        }
        else ListPessoas.setModel(new DefaultListModel());
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList ListPessoas;
    private javax.swing.JComboBox cbopc;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.Menu menu1;
    private java.awt.Menu menu2;
    private java.awt.Menu menu3;
    private java.awt.Menu menu4;
    private java.awt.MenuBar menuBar1;
    private java.awt.MenuBar menuBar2;
    private javax.swing.JTextField txtUser;
    private javax.swing.JTextField txtmorada;
    private javax.swing.JTextField txtnif;
    private javax.swing.JTextField txtnome;
    // End of variables declaration//GEN-END:variables

}
